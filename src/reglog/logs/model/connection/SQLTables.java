package reglog.logs.model.connection;

public class SQLTables {
	
	 
	public static final String SQL_TB_USER = "CREATE TABLE TB_USER("
			+ "ID_USER INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY, " 
			+ "NAME_USER VARCHAR(512) UNIQUE)";
	
	public static final String SQL_TB_WORKSTATION = "CREATE TABLE TB_WORKSTATION("
			+ "ID_WORKSTATION INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY, "
			+ "NAME_WORKSTATION VARCHAR(512) UNIQUE)";
	
	public static final String SQL_TB_CLASSNAME = "CREATE TABLE TB_CLASSNAME("
			+ "ID_CLASSNAME INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY, "
			+ "NAME_CLASSNAME VARCHAR(512) UNIQUE)";
	
	public static final String SQL_TB_STATUS = "CREATE TABLE TB_STATUS("
			+ "ID_STATUS INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY, "
			+ "NAME_STATUS VARCHAR(512) UNIQUE)";
	
	public static final String SQL_TB_LOG = "CREATE TABLE TB_LOG("
			+ "ID_LOG INT NOT NULL GENERATED ALWAYS AS IDENTITY, "
			+ "TEXT_LOG VARCHAR(512), "
			+ "EXEC_DATETIME TIMESTAMP, "
			+ "ID_USER INT NOT NULL, "
			+ "ID_WORKSTATION INT NOT NULL, "
			+ "ID_CLASSNAME INT NOT NULL, "
			+ "ID_STATUS INT NOT NULL, "
			+ "CONSTRAINT FK_USER FOREIGN KEY (ID_USER) REFERENCES TB_USER(ID_USER),"
			+ "CONSTRAINT FK_WORKSTATION FOREIGN KEY (ID_WORKSTATION) REFERENCES TB_WORKSTATION(ID_WORKSTATION),"
			+ "CONSTRAINT FK_CLASSNAME FOREIGN KEY (ID_CLASSNAME) REFERENCES TB_CLASSNAME(ID_CLASSNAME),"
			+ "CONSTRAINT FK_STATUS FOREIGN KEY (ID_STATUS) REFERENCES TB_STATUS(ID_STATUS))";
	
	public static final String SQL_NAME_STATUS_FAILED = "INSERT INTO TB_STATUS(NAME_STATUS) VALUES('FAILED')";
	public static final String SQL_NAME_STATUS_PASSED = "INSERT INTO TB_STATUS(NAME_STATUS) VALUES('PASSED')";
	public static final String SQL_NAME_STATUS_INFORMATION = "INSERT INTO TB_STATUS(NAME_STATUS) VALUES('INFORMATION')";
	public static final String SQL_NAME_STATUS_TITLE = "INSERT INTO TB_STATUS(NAME_STATUS) VALUES('TITLE')";
	public static final String SQL_NAME_STATUS_COMMENT = "INSERT INTO TB_STATUS(NAME_STATUS) VALUES('COMMENT')";
			
			
			
			

}
